class Program
{
    static void Main()
    {
        var data = Array.ConvertAll(Console.ReadLine().Split(), int.Parse);
        int n = data[0], s = data[1], g = data[2];  // n: 頂点数, s: スタート, g: ゴール
        List<int[]> adjList = new List<int[]>();    // 隣接リスト（添え字がID, 値の配列が隣接する頂点）
        bool[] visitedList = new bool[n];   // 訪問済みかどうか記録する（添え字がID）
        bool reachable = false; // ゴールにたどりつけるか
        for (int i = 0; i < n; i++)
        {
            data = Array.ConvertAll(Console.ReadLine().Split(), int.Parse);
            adjList.Add(data);
        }   // 頂点の数だけ隣接データを読み込む
        Queue<int> queue = new Queue<int>();
        visitedList[s] = true;
        queue.Enqueue(s);
        while (queue.Count > 0)
        {
            var currentNode = queue.Dequeue();
            var nextNodes = adjList[currentNode];
            foreach (var nextNode in nextNodes)
            {
                if (!visitedList[nextNode])
                {
                    visitedList[nextNode] = true;
                    queue.Enqueue(nextNode);
                    if (nextNode == g)
                    {
                        reachable = true;
                        Console.WriteLine("Goal!");
                        queue.Clear();
                        break;  // 抜ける
                    }   // ゴールに到着したら
                }   // まだ行ってない
            }   // 次の頂点を探す
        }
        if (!reachable)
            Console.WriteLine("行けない...(´・ω・｀)");
    }
}
